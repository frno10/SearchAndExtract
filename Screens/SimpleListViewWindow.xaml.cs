using Microsoft.Win32;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using Wpf.Frno.SearchAndExtract.Export;
using Wpf.Frno.SearchAndExtract.ExportTools;

namespace Wpf.Frno.SearchAndExtract.Screens
{
    /// <summary>
    /// Interaction logic for SimpleListViewWindow.xaml
    /// </summary>
    public partial class SimpleListViewWindow : Window
    {
        public SimpleListViewWindow()
        {
            InitializeComponent();

            DataContextChanged += SimpleListViewWindow_DataContextChanged;
            
        }

        private void SimpleListViewWindow_DataContextChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (DataContext != null &&
                DataContext is ICollection)
            {
                labelResults.Content = string.Format("Results [{0}]:", ((ICollection)DataContext).Count);
            }
        }

        private void ButtonExportToTxt_Click(object sender, RoutedEventArgs e)
        {
            List<string> data = this.DataContext as List<string>;

            if(data != null)
            {
                
                SaveFileDialog saveFileDialog = new SaveFileDialog();

                if (saveFileDialog.ShowDialog() == true)
                {
                    ExportFileDialog.Instance.Open(() =>
                    {
                        File.WriteAllText(saveFileDialog.FileName, string.Join(Environment.NewLine, data));
                        return true;
                    },
                    null);
                }
            }
        }

        private void buttonExportToCsv_Click(object sender, RoutedEventArgs e)
        {
            DataGridToCsv datagridToCsv = new DataGridToCsv();
            datagridToCsv.TryExport(listViewResults);
        }

        private void listViewResults_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            int selectedItemsCount = listViewResults.SelectedItems.Count;
            labelSelectionInfo.Content = selectedItemsCount > 1 ? string.Format("{0} rows selected", selectedItemsCount) : string.Empty;
        }

        private void ComboBoxUniqueForColumn_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            
        }

        private void ListViewResults_OnAutoGeneratedColumns(object sender, EventArgs e)
        {
            ComboBoxUniqueForColumn.ItemsSource = null;

            Dictionary<string, int> comboBoxItems = new Dictionary<string, int>() { };
            comboBoxItems.Add("all", -1);

            for (int i = 0; i < listViewResults.Columns.Count; i++)
            {
                comboBoxItems.Add(listViewResults.Columns[i].Header.ToString(), i);
            }
            ComboBoxUniqueForColumn.ItemsSource = comboBoxItems;
        }
    }
}